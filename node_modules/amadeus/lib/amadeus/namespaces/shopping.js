"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _flight_destinations = _interopRequireDefault(require("./shopping/flight_destinations"));
var _flight_offers = _interopRequireDefault(require("./shopping/flight_offers"));
var _flight_offers_search = _interopRequireDefault(require("./shopping/flight_offers_search"));
var _flight_dates = _interopRequireDefault(require("./shopping/flight_dates"));
var _seatmaps = _interopRequireDefault(require("./shopping/seatmaps"));
var _hotel_offer_search = _interopRequireDefault(require("./shopping/hotel_offer_search"));
var _hotel_offers_search = _interopRequireDefault(require("./shopping/hotel_offers_search"));
var _activities = _interopRequireDefault(require("./shopping/activities"));
var _activity = _interopRequireDefault(require("./shopping/activity"));
var _availability = _interopRequireDefault(require("./shopping/availability"));
var _transfer_offers = _interopRequireDefault(require("./shopping/transfer_offers"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**
 * A namespaced client for the
 * `/v1/shopping`, `/v2/shopping` and `/v3/shopping` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.shopping;
 * ```
 *
 * @param {Client} client
 * @property {FlightDestinations} flightDestinations
 * @property {FlightOffers} flightOffers
 * @property {FlightOffersSearch} flightOffersSearch
 * @property {FlightDates} flightDates
 * @property {Seatmaps} seatmaps
 * @property {HotelOfferSearch} hotelOffers
 * @property {HotelOffersSearch} hotelOffers
 * @property {Availability} availability
 * @property {TransferOffers} transferOffers
 */
var Shopping = /*#__PURE__*/function () {
  function Shopping(client) {
    _classCallCheck(this, Shopping);
    this.client = client;
    this.flightDestinations = new _flight_destinations["default"](client);
    this.flightOffers = new _flight_offers["default"](client);
    this.flightOffersSearch = new _flight_offers_search["default"](client);
    this.flightDates = new _flight_dates["default"](client);
    this.seatmaps = new _seatmaps["default"](client);
    this.hotelOffersSearch = new _hotel_offers_search["default"](client);
    this.activities = new _activities["default"](client);
    this.availability = new _availability["default"](client);
    this.transferOffers = new _transfer_offers["default"](client);
  }

  /**
   * Loads a namespaced path for a specific offer ID for Hotel Search V3
   *
   * @param  {string} [offerId]  The ID of the offer for a dedicated hotel
   * @return {HotelOfferSearch}
   **/
  _createClass(Shopping, [{
    key: "hotelOfferSearch",
    value: function hotelOfferSearch(offerId) {
      return new _hotel_offer_search["default"](this.client, offerId);
    }

    /**
     * Loads a namespaced path for a specific activity ID
     *
     * @param  {string} [activityId]  The ID of the activity for a dedicated tour or activity
     * @return {Activity}
     **/
  }, {
    key: "activity",
    value: function activity(activityId) {
      return new _activity["default"](this.client, activityId);
    }
  }]);
  return Shopping;
}();
var _default = Shopping;
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,